name: Update San Siro Calendar ICS

on:
  schedule:
    # Esegue ogni giorno alle 03:00 UTC (puoi cambiarlo)
    # Formato CRON: minuti ore giorno-del-mese mese giorno-della-settimana
    # Vedi https://crontab.guru/ per aiuto con la sintassi CRON
    - cron: '0 3 * * *'
  workflow_dispatch: # Permette l'esecuzione manuale dall'interfaccia di GitHub

jobs:
  build-calendar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # o v3, v2 a seconda delle tue preferenze/necessit√†

      - name: Set up Python
        uses: actions/setup-python@v5 # o v4
        with:
          python-version: '3.11' # Scegli una versione Python recente

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests icalendar pytz

      - name: Run script to generate ICS file
        run: python your_script_name.py # SOSTITUISCI con il nome del tuo file .py

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.OUTPUT_ICS_FILENAME || 'eventi_san_siro_merged.ics' }} # Usa la variabile d'ambiente o il nome file di default
          # Controlla se ci sono modifiche da committare
          if ! git diff --staged --quiet; then
            git commit -m "Aggiornamento automatico calendario eventi San Siro"
            git push
          else
            echo "Nessuna modifica al calendario, niente da committare."
          fi
        env:
          # Rendi il nome del file di output una variabile d'ambiente se vuoi definirlo nello script
          # e accedervi qui, oppure hardcodalo come sopra.
          # OUTPUT_ICS_FILENAME: "eventi_san_siro_merged.ics" # Deve corrispondere a OUTPUT_ICS_FILE nello script Python
